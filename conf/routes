# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                                                 controllers.HomeController.index

# node endpoints
POST    /nodes/:sourceKey/:name                           controllers.NodeController.createNode(sourceKey: String, name: String)
GET     /nodes/:sourceKey                                 controllers.NodeController.getNode(sourceKey: String)
POST    /versions/nodes/:sourceKey                        controllers.NodeController.createNodeVersion(sourceKey: String)
GET     /versions/nodes/:id                               controllers.NodeController.getNodeVersion(id: Long)

# edge endpoints
POST    /edges/:sourceKey/:name/:fromNodeId/:toNodeId     controllers.EdgeController.createEdge(sourceKey: String, name: String, fromNodeId: Long, toNodeId: Long)
GET     /edges/:sourceKey                                 controllers.EdgeController.getEdge(sourceKey: String)
POST    /versions/edges/:sourceKey                        controllers.EdgeController.createEdgeVersion(sourceKey: String)
GET     /versions/edges/:id                               controllers.EdgeController.getEdgeVersion(id: Long)

# graph endpoints
POST    /graphs/:sourceKey/:name                          controllers.GraphController.createGraph(sourceKey: String, name: String)
GET     /graphs/:sourceKey                                controllers.GraphController.getGraph(sourceKey: String)
POST    /versions/graphs/:sourceKey                       controllers.GraphController.createGraphVersion(sourceKey: String)
GET     /versions/graphs/:id                              controllers.GraphController.getGraphVersion(id: Long)

# structure endpoints
POST    /structures/:sourceKey/:name                      controllers.StructureController.createStructure(sourceKey: String, name: String)
GET     /structures/:sourceKey                            controllers.StructureController.getStructure(sourceKey: String)
POST    /versions/structures/:sourceKey                   controllers.StructureController.createStructureVersion(sourceKey: String)
GET     /versions/structures/:id                          controllers.StructureController.getStructureVersion(id: Long)

# lineage edge endpoints
POST    /lineage_edges/:sourceKey/:name                   controllers.LineageEdgeController.createLineageEdge(sourceKey: String, name: String)
GET     /lineage_edges/:sourceKey                         controllers.LineageEdgeController.getLineageEdge(sourceKey: String)
POST    /versions/lineage_edges/:sourceKey                controllers.LineageEdgeController.createLineageEdgeVersion(sourceKey: String)
GET     /versions/lineage_edges/:id                       controllers.LineageEdgeController.getLineageEdgeVersion(id: Long)

# structure endpoints
POST    /lineage_graphs/:sourceKey/:name                  controllers.LineageGraphController.createLineageGraph(sourceKey: String, name: String)
GET     /lineage_graphs/:sourceKey                        controllers.LineageGraphController.getLineageGraph(sourceKey: String)
POST    /versions/lineage_graphs/:sourceKey               controllers.LineageGraphController.createLineageGraphVersion(sourceKey: String)
GET     /versions/lineage_graphs/:id                      controllers.LineageGraphController.getLineageGraphVersion(id: Long)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
